"use strict";(globalThis.webpackChunk_feedzai_js_utilities_docs=globalThis.webpackChunk_feedzai_js_utilities_docs||[]).push([[6520],{2916:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(4848),s=t(8453);const o={title:"GenericComponentProps"},r=void 0,a={id:"typings/generic",title:"GenericComponentProps",description:"Common React Component Props",source:"@site/docs/typings/generic.mdx",sourceDirName:"typings",slug:"/typings/generic",permalink:"/js-utilities/docs/typings/generic",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"GenericComponentProps"},sidebar:"tutorialSidebar",previous:{title:"useScript",permalink:"/js-utilities/docs/hooks/use-script"},next:{title:"TupleToUnion",permalink:"/js-utilities/docs/typings/object-as-tuple"}},l={},c=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:3}];function p(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Common React Component Props"}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'interface GenericComponentProps {\n  /**\n   * A Unique identifier for a component or `DOM` element\n   */\n  id?: string;\n\n  /**\n   * Extra CSS classes to add to the component\n   */\n  className?: string;\n\n  /**\n   * A boolean attribute which is present if the component should be disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * The aria-label attribute is used to define a string that labels the current element.\n   * Use it in cases where a text label is not visible on the screen.\n   * If there is visible text labeling the element, use aria-labelledby instead.\n   */\n  "aria-label"?: string;\n\n  /**\n   * A `data-attribute` identifier for testing purposes\n   */\n  "data-testid"?: string;\n\n  /**\n   * The tabindex global attribute indicates that its element can be focused,\n   * and where it participates in sequential keyboard navigation (usually with the `tab` key, hence the name).\n   */\n  tabIndex?: number;\n\n  /**\n   * Custom CSS Styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * An element must be filled with content\n   */\n  required?: React.HTMLAttributes<HTMLElement>["aria-required"];\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { GenericComponentProps } from '@feedzai/js-utilities';\n\ntype Props = GenericComponentProps & {\n    anotherProps?: Boolean;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);