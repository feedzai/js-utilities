"use strict";(globalThis.webpackChunk_feedzai_js_utilities_docs=globalThis.webpackChunk_feedzai_js_utilities_docs||[]).push([[924],{4989:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(4848),a=n(8453);const i={title:"classNames"},o=void 0,l={id:"functions/DOM/classnames",title:"classNames",description:"A tiny (228 bytes) utility for constructing className strings conditionally.",source:"@site/docs/functions/DOM/classnames.mdx",sourceDirName:"functions/DOM",slug:"/functions/DOM/classnames",permalink:"/js-utilities/docs/functions/DOM/classnames",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"classNames"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/js-utilities/docs/intro"},next:{title:"cloneValidElement",permalink:"/js-utilities/docs/functions/DOM/clone-valid-element"}},r={},c=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:3}];function u(e){const s={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"A tiny (228 bytes) utility for constructing className strings conditionally."}),"\n",(0,t.jsxs)(s.p,{children:["Also serves as a faster & smaller drop-in replacement for the ",(0,t.jsx)(s.code,{children:"classnames"})," module."]}),"\n",(0,t.jsx)(s.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"function classNames(...classes: ClassValue[]): string;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import { classNames } from '@feedzai/js-utilities';\n\n// Strings (variadic)\nclassNames('foo', true && 'bar', 'baz');\n// 'foo bar baz'\n\n// Objects\nclassNames({ foo:true, bar:false, baz:isTrue() });\n// 'foo baz'\n\n// Objects (variadic)\nclassNames({ foo:true }, { bar:false }, null, { '--foobar':'hello' });\n// 'foo --foobar'\n\n// Arrays\nclassNames(['foo', 0, false, 'bar']);\n// 'foo bar'\n\n// Arrays (variadic)\nclassNames(['foo'], ['', 0, false, 'bar'], [['baz', [['hello'], 'there']]]);\n// 'foo bar baz hello there'\n\n// Kitchen sink (with nesting)\nclassNames('foo', [1 && 'bar', { baz:false, bat:null }, ['hello', ['world']]], 'cya');\n// 'foo bar hello world cya'\n\n// Dynamic classnames with computed keys\nconst btnType = \"primary\";\nclassNames({ [`btn-${btnType}`]: true });\n// 'btn-primary'\n"})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const a={},i=t.createContext(a);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);