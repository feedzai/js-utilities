"use strict";(globalThis.webpackChunk_feedzai_js_utilities_docs=globalThis.webpackChunk_feedzai_js_utilities_docs||[]).push([[9393],{967:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=n(4848),r=n(8453);const s={title:"Polymorphic"},p=void 0,i={id:"typings/polymorphic-ref",title:"Polymorphic",description:"Creating polymorphic components.",source:"@site/docs/typings/polymorphic-ref.mdx",sourceDirName:"typings",slug:"/typings/polymorphic-ref",permalink:"/js-utilities/docs/typings/polymorphic-ref",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Polymorphic"},sidebar:"tutorialSidebar",previous:{title:"TupleToUnion",permalink:"/js-utilities/docs/typings/object-as-tuple"}},c={},l=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:3}];function a(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Creating polymorphic components."}),"\n",(0,o.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'type PolymorphicComponentProps<C extends React.ElementType, Props = {}> = InheritableElementProps<\n    C,\n    Props & AsProp<C>\n>;\ntype PolymorphicRef<C extends React.ElementType> = React.ComponentPropsWithRef<C>["ref"];\ntype PolymorphicComponentPropsWithRef<\n    C extends React.ElementType,\n    Props = Record<string, unknown>,\n> = PolymorphicComponentProps<C, Props> & { ref?: PolymorphicRef<C> };\n'})}),"\n",(0,o.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import { PolymorphicRef, PolymorphicComponentPropsWithRef } from \'@feedzai/js-utilities\';\n\ntype FlexProps<C extends React.ElementType> = PolymorphicComponentPropsWithRef<C, Props>;\ntype FlexComponent = <C extends React.ElementType = "p">(props: FlexProps<C>) => React.ReactElement | null;\n\nconst Flex: FlexComponent = React.forwardRef(\n    <C extends React.ElementType = "div">(htmlProps: FlexProps<C>, ref?: PolymorphicRef<C>) => {\n  ...\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>p,x:()=>i});var o=n(6540);const r={},s=o.createContext(r);function p(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:p(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);